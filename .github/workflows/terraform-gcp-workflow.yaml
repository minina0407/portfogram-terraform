name: Terraform CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - 'env/dev/*'
      - '.github/workflows/terraform-gcp-workflow.yaml'

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0

      # Setup gcloud CLI
      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      # Authenticate to GCP
      - name: Authenticate to GCP
        id: auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}


      - name: Navigate to dev environment
        working-directory: ./env/dev
        run: echo "Navigated to env/dev"

      # Terraform Format and Style 검사
      - name: Terraform Format and Style
        id: fmt
        working-directory: ./env/dev
        run: terraform fmt

      - name: Terraform Init
        id: init
        working-directory: ./env/dev
        run: terraform init

      - name: Terraform Validate
        id: validate
        working-directory: ./env/dev
        run: terraform validate

      - name: Terraform Plan
        id: plan
        working-directory: ./env/dev
        #  plan은 terraorm.tfvars 파일을 참조하여 실행
        run: terraform plan -var-file=terraform.tfvars -out=plan.tfplan


      - name: Create GitHub Comment
        id: create_comment
        uses: actions/github-script@v3
        with:
            github-token: ${{ secrets.PAT_TOKEN }}
            script: |
                const output = `#### Terraform Format and Style 🖌\`${{ steps.fmt.outputs.stdout }}\`
                #### Terraform Initialization ⚙️\`${{ steps.init.outputs.stdout }}\`
                #### Terraform Plan 📖\`${{ steps.plan.outputs.stdout }}\``;
                github.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: `## Terraform checks in directory '${{ matrix.directory }}'\n` + output
                })